package platform-poc:keyvalue@0.1.0;

interface types {
    resource bucket {
        constructor(name: string, wasi-kv-handle: u32);

        name: func() -> string;
        wasi-kv-handle: func() -> u32;
    }

    type key = string;
    type value = list<u8>;
    type key-value = tuple<key, value>;

    variant error {
        internal(string),
    }
}

interface keyvalue {
    use types.{bucket, error, key, key-value, value };

    /// Opens a bucket, returning the resource
    open-bucket: func(name: string) -> result<bucket, error>;

    /// Gets all known keys
    get-all: func(bucket: bucket) -> result<list<key-value>, error>;

    /// Set a key to value
    set: func(bucket: bucket, key: key, value: value) -> result<_, error>;
}
